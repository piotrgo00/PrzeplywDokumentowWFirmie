@model PrzeplywDokumentowWFirmie.Models.Order

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrderId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirmId, "FirmId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FirmId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirmId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WarehouseId, "WarehouseId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("WarehouseId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WarehouseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Commodities, "Commodities", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Commodities.FirstOrDefault().ConsumableItem.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Commodities.FirstOrDefault().Quantity)
                        </th>
                        <th>
                            Cost per item
                        </th>
                        <th>
                            Total value
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.Commodities)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ConsumableItem.Name)
                            @Html.DisplayFor(modelItem => item.ElectronicItem.Name)
                            @Html.DisplayFor(modelItem => item.FurnitureItem.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>
                        @if (item.ConsumableItem != null)
                         {
                            <td>
                                @item.ConsumableItem.Price
                            </td>
                            <td>
                                @(item.ConsumableItem.Price*item.Quantity)
                            </td>
                         }
                        @if (item.ElectronicItem != null)
                         {
                            <td>
                                @item.ElectronicItem.Price
                            </td>
                            <td>
                                @(item.ElectronicItem.Price*item.Quantity)
                            </td>
                         }
                        @if (item.FurnitureItem != null)
                         {
                            <td>
                                @item.FurnitureItem.Price
                            </td>
                            <td>
                                @(item.FurnitureItem.Price*item.Quantity)
                            </td>
                         }
                        <td>
                            @Html.ActionLink("Delete", "Delete", "Commodities", new { id = item.CommodityId, orderId = Model.OrderId }, null)
                        </td>
                    </tr>
                    <tr>
                    </tr>
                    }
                </table>
            </div>
        </div>
        <div>
            @*@Html.ActionLink("Create new Commodity", "Create", "Commodities", new { id = Model.OrderId }, null)*@
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <span style="margin-right:5px">
                    <a href="/Commodities/Create/@Model.OrderId" class="btn btn-default">Add new commodity</a>
                </span>
                <span>
                    <input type="submit" value="Accept Order" class="btn btn-default" /> 
                </span>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
